{"ast":null,"code":"var _jsxFileName = \"/Users/hrida/SYST35300/samskritabharati/src/components/BrowseBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BookCard from './BookCard';\nimport Sorting from './Sorting';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrowseBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [user] = useState(null);\n  const userId = user === null || user === void 0 ? void 0 : user.id;\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await fetch('/api/books');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        const formattedBooks = data.map(book => ({\n          id: book._id,\n          title: book.title || '',\n          author: book.author || '',\n          isbn: book.isbn || '',\n          // Assuming your book data contains an ISBN field\n          image: book.image || ''\n        }));\n        setBooks(formattedBooks);\n        setFilteredBooks(formattedBooks); // Initialize filteredBooks with all books\n      } catch (error) {\n        console.error(\"Error fetching books:\", error);\n      }\n    };\n    fetchBooks();\n  }, []);\n\n  // Sorting books\n  const sortBooks = order => {\n    let sortedArray = [...filteredBooks]; // Sort based on filteredBooks\n\n    if (order === 'asc') {\n      sortedArray.sort((a, b) => a.title.localeCompare(b.title));\n    } else if (order === 'desc') {\n      sortedArray.sort((a, b) => b.title.localeCompare(a.title));\n    }\n    setFilteredBooks(sortedArray); // Update filteredBooks with the sorted array\n  };\n\n  // Filtering books by name or ISBN\n  const filterBooks = searchTerm => {\n    if (!searchTerm.trim()) {\n      setFilteredBooks(books); // Reset to all books if no search term\n    } else {\n      const search = searchTerm.trim().toLowerCase();\n      const filteredArray = books.filter(book => book.title && book.title.toLowerCase().includes(search) ||\n      // Filter by title\n      book.author && book.author.toLowerCase().includes(search) ||\n      // Filter by author\n      book.isbn && book.isbn.toLowerCase().includes(search) // Filter by ISBN\n      );\n      setFilteredBooks(filteredArray); // Update with filtered books\n    }\n  };\n  const searchContainerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#000',\n    padding: '20px'\n  };\n  const sortingContainerStyle = {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingRight: '20px',\n    backgroundColor: '#000',\n    paddingBottom: '10px'\n  };\n  const pageStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start',\n    backgroundColor: '#000',\n    padding: '20px',\n    color: 'white'\n  };\n  const noBooksStyle = {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: '1.5rem'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: searchContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        filterBooks: filterBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: sortingContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(Sorting, {\n        sortBooks: sortBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: pageStyle,\n      children: filteredBooks.length > 0 ? filteredBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book,\n        userId: userId\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: noBooksStyle,\n        children: \"No books found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(BrowseBooks, \"M0+VGxtWyl7lBMfg8A53vUkU6wM=\");\n_c = BrowseBooks;\nexport default BrowseBooks;\nvar _c;\n$RefreshReg$(_c, \"BrowseBooks\");","map":{"version":3,"names":["React","useEffect","useState","BookCard","Sorting","Search","jsxDEV","_jsxDEV","BrowseBooks","_s","books","setBooks","filteredBooks","setFilteredBooks","user","userId","id","fetchBooks","response","fetch","ok","Error","data","json","formattedBooks","map","book","_id","title","author","isbn","image","error","console","sortBooks","order","sortedArray","sort","a","b","localeCompare","filterBooks","searchTerm","trim","search","toLowerCase","filteredArray","filter","includes","searchContainerStyle","display","justifyContent","alignItems","backgroundColor","padding","sortingContainerStyle","paddingRight","paddingBottom","pageStyle","flexWrap","color","noBooksStyle","textAlign","fontSize","children","style","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/BrowseBooks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport BookCard from './BookCard';\r\nimport Sorting from './Sorting';\r\nimport Search from './Search';\r\n\r\nconst BrowseBooks = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [filteredBooks, setFilteredBooks] = useState([]);\r\n  const [user] = useState(null);\r\n  const userId = user?.id;\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await fetch('/api/books');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        const formattedBooks = data.map(book => ({\r\n          id: book._id,\r\n          title: book.title || '',\r\n          author: book.author || '',\r\n          isbn: book.isbn || '', // Assuming your book data contains an ISBN field\r\n          image: book.image || ''\r\n        }));\r\n        setBooks(formattedBooks);\r\n        setFilteredBooks(formattedBooks); // Initialize filteredBooks with all books\r\n      } catch (error) {\r\n        console.error(\"Error fetching books:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  // Sorting books\r\n  const sortBooks = (order) => {\r\n    let sortedArray = [...filteredBooks]; // Sort based on filteredBooks\r\n\r\n    if (order === 'asc') {\r\n      sortedArray.sort((a, b) => a.title.localeCompare(b.title));\r\n    } else if (order === 'desc') {\r\n      sortedArray.sort((a, b) => b.title.localeCompare(a.title));\r\n    }\r\n\r\n    setFilteredBooks(sortedArray); // Update filteredBooks with the sorted array\r\n  };\r\n\r\n  // Filtering books by name or ISBN\r\n  const filterBooks = (searchTerm) => {\r\n    if (!searchTerm.trim()) {\r\n      setFilteredBooks(books); // Reset to all books if no search term\r\n    } else {\r\n      const search = searchTerm.trim().toLowerCase();\r\n      const filteredArray = books.filter(book =>\r\n        (book.title && book.title.toLowerCase().includes(search)) || // Filter by title\r\n        (book.author && book.author.toLowerCase().includes(search)) || // Filter by author\r\n        (book.isbn && book.isbn.toLowerCase().includes(search)) // Filter by ISBN\r\n      );\r\n      setFilteredBooks(filteredArray); // Update with filtered books\r\n    }\r\n  };\r\n\r\n  const searchContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#000',\r\n    padding: '20px',\r\n  };\r\n\r\n  const sortingContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    paddingRight: '20px',\r\n    backgroundColor: '#000',\r\n    paddingBottom: '10px',\r\n  };\r\n\r\n  const pageStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'flex-start',\r\n    backgroundColor: '#000',\r\n    padding: '20px',\r\n    color: 'white',\r\n  };\r\n\r\n  const noBooksStyle = {\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    fontSize: '1.5rem',\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={searchContainerStyle}>\r\n        <Search filterBooks={filterBooks} />\r\n      </div>\r\n      <div style={sortingContainerStyle}>\r\n        <Sorting sortBooks={sortBooks} />\r\n      </div>\r\n      <div style={pageStyle}>\r\n        {filteredBooks.length > 0 ? (\r\n          filteredBooks.map((book) => (\r\n            <BookCard key={book.id} book={book} userId={userId} />\r\n          ))\r\n        ) : (\r\n          <div style={noBooksStyle}>No books found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrowseBooks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}