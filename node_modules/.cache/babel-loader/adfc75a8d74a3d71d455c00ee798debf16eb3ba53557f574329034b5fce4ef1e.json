{"ast":null,"code":"import React,{useState,useEffect}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import'./BookPickup.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BookPickup=()=>{const[pickupLocation,setPickupLocation]=useState('');const[selectedDate,setSelectedDate]=useState(null);const[availableSlots,setAvailableSlots]=useState([]);const[timeSlot,setTimeSlot]=useState('');const[confirmation,setConfirmation]=useState(false);const[scheduledPickup,setScheduledPickup]=useState(null);// Fetch the user's scheduled pickup (if it exists)\nuseEffect(()=>{const fetchScheduledPickup=async()=>{try{const user=JSON.parse(localStorage.getItem('user'));const response=await fetch(`/api/pickup/scheduled?email=${user.email}`);const data=await response.json();if(data.scheduledPickup){setScheduledPickup(data.scheduledPickup);setPickupLocation(data.scheduledPickup.pickupLocation);setSelectedDate(new Date(data.scheduledPickup.pickupDate));setTimeSlot(data.scheduledPickup.pickupTime);setConfirmation(true);// Automatically show the confirmation page\n}}catch(error){console.error('Error fetching scheduled pickup:',error);}};fetchScheduledPickup();},[]);// Fetch available slots when a date and location are selected\nuseEffect(()=>{if(selectedDate&&pickupLocation){const fetchAvailableSlots=async()=>{try{const formattedDate=selectedDate.toISOString().split('T')[0];const response=await fetch(`/api/pickup/available-slots?pickupDate=${formattedDate}&pickupLocation=${pickupLocation}`);const data=await response.json();setAvailableSlots(data.availableSlots);}catch(error){console.error('Error fetching available slots:',error);}};fetchAvailableSlots();}},[selectedDate,pickupLocation]);const handleSchedulePickup=async()=>{if(pickupLocation&&selectedDate&&timeSlot){try{const urlParams=new URLSearchParams(window.location.search);const cartId=urlParams.get('cartId');const user=JSON.parse(localStorage.getItem('user'));await fetch('/api/pickup/schedule',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({cartId,email:user.email,pickupDate:selectedDate,pickupTime:timeSlot,pickupLocation:pickupLocation})});setConfirmation(true);}catch(error){console.error('Error scheduling pickup:',error);}}else{alert('Please select all options before proceeding.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"book-pickup-container\",children:!confirmation?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Schedule Book Pickup\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Pickup Location:\",/*#__PURE__*/_jsxs(\"select\",{value:pickupLocation,onChange:e=>setPickupLocation(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Location\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Library 1\",children:\"Library 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Library 2\",children:\"Library 2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Center A\",children:\"Center A\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Center B\",children:\"Center B\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Date:\",/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>setSelectedDate(date),minDate:new Date()})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),availableSlots.length>0&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Time Slot:\",/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-container\",children:availableSlots.map((slot,index)=>/*#__PURE__*/_jsx(\"button\",{className:`time-slot ${timeSlot===slot?'selected':''}`,onClick:()=>setTimeSlot(slot),children:slot},index))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"schedule-btn\",onClick:handleSchedulePickup,children:\"Schedule Pickup\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pickup Confirmation\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Location: \",pickupLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Date: \",selectedDate===null||selectedDate===void 0?void 0:selectedDate.toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Time: \",timeSlot]}),/*#__PURE__*/_jsx(\"button\",{className:\"reschedule-btn\",onClick:()=>setConfirmation(false),children:\"Reschedule Pickup\"})]})});};export default BookPickup;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsx","_jsx","jsxs","_jsxs","BookPickup","pickupLocation","setPickupLocation","selectedDate","setSelectedDate","availableSlots","setAvailableSlots","timeSlot","setTimeSlot","confirmation","setConfirmation","scheduledPickup","setScheduledPickup","fetchScheduledPickup","user","JSON","parse","localStorage","getItem","response","fetch","email","data","json","Date","pickupDate","pickupTime","error","console","fetchAvailableSlots","formattedDate","toISOString","split","handleSchedulePickup","urlParams","URLSearchParams","window","location","search","cartId","get","method","headers","body","stringify","alert","className","children","value","onChange","e","target","selected","date","minDate","length","map","slot","index","onClick","toLocaleDateString"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/BookPickup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './BookPickup.css';\n\nconst BookPickup = () => {\n  const [pickupLocation, setPickupLocation] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [timeSlot, setTimeSlot] = useState('');\n  const [confirmation, setConfirmation] = useState(false);\n  const [scheduledPickup, setScheduledPickup] = useState(null);\n\n  // Fetch the user's scheduled pickup (if it exists)\n  useEffect(() => {\n    const fetchScheduledPickup = async () => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        const response = await fetch(`/api/pickup/scheduled?email=${user.email}`);\n        const data = await response.json();\n        if (data.scheduledPickup) {\n          setScheduledPickup(data.scheduledPickup);\n          setPickupLocation(data.scheduledPickup.pickupLocation);\n          setSelectedDate(new Date(data.scheduledPickup.pickupDate));\n          setTimeSlot(data.scheduledPickup.pickupTime);\n          setConfirmation(true); // Automatically show the confirmation page\n        }\n      } catch (error) {\n        console.error('Error fetching scheduled pickup:', error);\n      }\n    };\n\n    fetchScheduledPickup();\n  }, []);\n\n  // Fetch available slots when a date and location are selected\n  useEffect(() => {\n    if (selectedDate && pickupLocation) {\n      const fetchAvailableSlots = async () => {\n        try {\n          const formattedDate = selectedDate.toISOString().split('T')[0];\n          const response = await fetch(`/api/pickup/available-slots?pickupDate=${formattedDate}&pickupLocation=${pickupLocation}`);\n          const data = await response.json();\n          setAvailableSlots(data.availableSlots);\n        } catch (error) {\n          console.error('Error fetching available slots:', error);\n        }\n      };\n\n      fetchAvailableSlots();\n    }\n  }, [selectedDate, pickupLocation]);\n\n  const handleSchedulePickup = async () => {\n    if (pickupLocation && selectedDate && timeSlot) {\n      try {\n        const urlParams = new URLSearchParams(window.location.search);\n        const cartId = urlParams.get('cartId');\n        const user = JSON.parse(localStorage.getItem('user'));\n\n        await fetch('/api/pickup/schedule', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            cartId,\n            email: user.email,\n            pickupDate: selectedDate,\n            pickupTime: timeSlot,\n            pickupLocation: pickupLocation,\n          }),\n        });\n\n        setConfirmation(true);\n      } catch (error) {\n        console.error('Error scheduling pickup:', error);\n      }\n    } else {\n      alert('Please select all options before proceeding.');\n    }\n  };\n\n  return (\n    <div className=\"book-pickup-container\">\n      {!confirmation ? (\n        <div>\n          <h2>Schedule Book Pickup</h2>\n\n          <label>\n            Select Pickup Location:\n            <select value={pickupLocation} onChange={(e) => setPickupLocation(e.target.value)}>\n              <option value=\"\">Select Location</option>\n              <option value=\"Library 1\">Library 1</option>\n              <option value=\"Library 2\">Library 2</option>\n              <option value=\"Center A\">Center A</option>\n              <option value=\"Center B\">Center B</option>\n            </select>\n          </label>\n          <br />\n          <br />\n          <label>\n            Select Date:\n            <DatePicker\n              selected={selectedDate}\n              onChange={(date) => setSelectedDate(date)}\n              minDate={new Date()}\n            />\n          </label>\n          <br />\n          <br />\n          {availableSlots.length > 0 && (\n            <label>\n              Select Time Slot:\n              <div className=\"time-slot-container\">\n                {availableSlots.map((slot, index) => (\n                  <button\n                    key={index}\n                    className={`time-slot ${timeSlot === slot ? 'selected' : ''}`}\n                    onClick={() => setTimeSlot(slot)}\n                  >\n                    {slot}\n                  </button>\n                ))}\n              </div>\n            </label>\n          )}\n\n          <button className=\"schedule-btn\" onClick={handleSchedulePickup}>\n            Schedule Pickup\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h2>Pickup Confirmation</h2>\n          <p>Pickup Location: {pickupLocation}</p>\n          <p>Pickup Date: {selectedDate?.toLocaleDateString()}</p>\n          <p>Pickup Time: {timeSlot}</p>\n          <button className=\"reschedule-btn\" onClick={() => setConfirmation(false)}>\n            Reschedule Pickup\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookPickup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}