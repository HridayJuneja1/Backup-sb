{"ast":null,"code":"var _jsxFileName = \"/Users/hrida/SYST35300/samskritabharati/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    token: resetPasswordToken\n  } = useParams();\n  const passwordIsValid = password => {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    return hasUpperCase && hasNumber && hasSpecialChar;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(t(\"passwords_not_match_message\"));\n      return;\n    }\n    if (!passwordIsValid(password)) {\n      setMessage(t(\"password_requirements_message\")); // Ensure this key is translated in your i18n files\n      return;\n    }\n    try {\n      const response = await axios.post('/api/users/reset-password', {\n        token: resetPasswordToken,\n        password\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage(t(\"password_reset_fail_message\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: t('reset_password_title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: t('new_password_placeholder'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: t('confirm_new_password_placeholder'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: t('submit_button')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"4YjFgRWgki0D7nn7VoLeoEGMHXo=\", false, function () {\n  return [useTranslation, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","useTranslation","jsxDEV","_jsxDEV","ResetPassword","_s","t","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","token","resetPasswordToken","passwordIsValid","hasUpperCase","test","hasNumber","hasSpecialChar","handleSubmit","e","preventDefault","response","post","data","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './ResetPassword.css';\r\n\r\nfunction ResetPassword() {\r\n  const { t } = useTranslation();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  \r\n  const { token: resetPasswordToken } = useParams();\r\n\r\n  const passwordIsValid = (password) => {\r\n    const hasUpperCase = /[A-Z]/.test(password);\r\n    const hasNumber = /[0-9]/.test(password);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n    return hasUpperCase && hasNumber && hasSpecialChar;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(t(\"passwords_not_match_message\"));\r\n      return;\r\n    }\r\n\r\n    if (!passwordIsValid(password)) {\r\n      setMessage(t(\"password_requirements_message\")); // Ensure this key is translated in your i18n files\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('/api/users/reset-password', { token: resetPasswordToken, password });\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(t(\"password_reset_fail_message\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-wrapper\">\r\n      <form onSubmit={handleSubmit} className=\"reset-password-form\">\r\n        <h2>{t('reset_password_title')}</h2>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder={t('new_password_placeholder')}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          placeholder={t('confirm_new_password_placeholder')}\r\n          required\r\n        />\r\n        <button type=\"submit\">{t('submit_button')}</button>\r\n        {message && <p className=\"message\">{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}