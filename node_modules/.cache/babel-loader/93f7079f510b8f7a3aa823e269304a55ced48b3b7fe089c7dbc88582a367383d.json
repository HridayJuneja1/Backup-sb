{"ast":null,"code":"var _jsxFileName = \"/Users/hrida/SYST35300/samskritabharati/src/components/PasswordChange.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next';\nimport './PasswordChange.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordChange() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [email, setEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const passwordIsValid = password => {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    return hasUpperCase && hasNumber && hasSpecialChar;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      alert(t('passwords_dont_match_alert'));\n      return;\n    }\n    if (!passwordIsValid(newPassword)) {\n      alert(t('password_requirements_alert'));\n      return;\n    }\n    try {\n      const response = await axios.post('/api/users/change-password', {\n        email,\n        oldPassword,\n        newPassword\n      });\n      if (response.data.success) {\n        alert(t('password_changed_success_alert'));\n      } else {\n        alert(t('failed_change_password_alert'));\n      }\n    } catch (error) {\n      console.error('Password change error:', error);\n      alert(t('technical_issues_alert'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: t('change_password_title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"input\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: t('email_placeholder'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        value: oldPassword,\n        onChange: e => setOldPassword(e.target.value),\n        placeholder: t('old_password_placeholder'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        placeholder: t('new_password_placeholder'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: t('confirm_new_password_placeholder'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: t('submit_button')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordChange, \"ltmTTwRCua8+69dIrDDBAno/zUU=\", false, function () {\n  return [useTranslation];\n});\n_c = PasswordChange;\nexport default PasswordChange;\nvar _c;\n$RefreshReg$(_c, \"PasswordChange\");","map":{"version":3,"names":["React","useState","axios","useTranslation","jsxDEV","_jsxDEV","PasswordChange","_s","t","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordIsValid","password","hasUpperCase","test","hasNumber","hasSpecialChar","handleSubmit","e","preventDefault","alert","response","post","data","success","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/PasswordChange.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './PasswordChange.css';\r\n\r\nfunction PasswordChange() {\r\n  const { t } = useTranslation();\r\n  const [email, setEmail] = useState('');\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const passwordIsValid = (password) => {\r\n    const hasUpperCase = /[A-Z]/.test(password);\r\n    const hasNumber = /[0-9]/.test(password);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n    return hasUpperCase && hasNumber && hasSpecialChar;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      alert(t('passwords_dont_match_alert'));\r\n      return;\r\n    }\r\n\r\n    if (!passwordIsValid(newPassword)) {\r\n      alert(t('password_requirements_alert'));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('/api/users/change-password', { email, oldPassword, newPassword });\r\n      if (response.data.success) {\r\n        alert(t('password_changed_success_alert'));\r\n      } else {\r\n        alert(t('failed_change_password_alert'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Password change error:', error);\r\n      alert(t('technical_issues_alert'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title\">{t('change_password_title')}</h2>\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <input\r\n          type=\"email\"\r\n          className=\"input\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder={t('email_placeholder')}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input\"\r\n          value={oldPassword}\r\n          onChange={(e) => setOldPassword(e.target.value)}\r\n          placeholder={t('old_password_placeholder')}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          placeholder={t('new_password_placeholder')}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          placeholder={t('confirm_new_password_placeholder')}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"button\">{t('submit_button')}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordChange;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}