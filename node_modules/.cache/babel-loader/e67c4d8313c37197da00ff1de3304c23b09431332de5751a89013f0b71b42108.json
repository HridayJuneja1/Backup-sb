{"ast":null,"code":"import React,{useState,useEffect}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import axios from'axios';import{useLocation}from'react-router-dom';import'./BookPickup.css';// Assuming you'll style it with a custom CSS file for a better UI\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BookPickup=()=>{const[pickupLocation,setPickupLocation]=useState('');// Renamed to 'pickupLocation'\nconst[selectedDate,setSelectedDate]=useState(null);const[timeSlot,setTimeSlot]=useState('');const[confirmation,setConfirmation]=useState(false);const[bookDetails,setBookDetails]=useState(null);// Stores the book details from the query params\nconst location=useLocation();// Using 'location' from 'react-router-dom'\nconst params=new URLSearchParams(location.search);const isbn=params.get('isbn');const email=params.get('email');// Assume user is logged in, and email is passed in the query\n// Fetch book details based on the ISBN (this can be from your backend API)\nuseEffect(()=>{const fetchBookDetails=async()=>{try{const response=await axios.get(`/api/books/${isbn}`);// Fetch the book details\nsetBookDetails(response.data);}catch(error){console.error('Error fetching book details:',error);}};if(isbn){fetchBookDetails();}},[isbn]);const locations=['Library 1','Library 2','Center A','Center B','Bookstore C','Bookstore D'];// Generate time slots in 30-minute intervals from 9 AM to 5 PM\nconst generateTimeSlots=()=>{const timeSlots=[];let startTime=new Date();startTime.setHours(9,0,0,0);// Start from 9 AM\nwhile(startTime.getHours()<17){// Till 5 PM\nconst endTime=new Date(startTime);endTime.setMinutes(startTime.getMinutes()+30);// Increment by 30 mins\nconst formattedTime=`${startTime.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})} - ${endTime.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})}`;timeSlots.push(formattedTime);startTime=endTime;}return timeSlots;};const handleSchedulePickup=async()=>{if(pickupLocation&&selectedDate&&timeSlot){try{await axios.post('/api/pickup/schedule',{isbn,email,pickupDate:selectedDate,pickupTime:timeSlot,pickupLocation:pickupLocation// Ensure the variable is 'pickupLocation'\n});setConfirmation(true);}catch(error){console.error('Error scheduling pickup:',error);}}else{alert('Please select all options before proceeding.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"book-pickup-container\",children:!confirmation?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Schedule Book Pickup\"}),bookDetails?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Book Title: \",bookDetails.title]}),/*#__PURE__*/_jsx(\"img\",{src:bookDetails.image,alt:bookDetails.title,className:\"book-image\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading book details...\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Pickup Location:\",/*#__PURE__*/_jsxs(\"select\",{value:pickupLocation,onChange:e=>setPickupLocation(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Location\"}),locations.map((loc,index)=>/*#__PURE__*/_jsx(\"option\",{value:loc,children:loc},index))]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Date:\",/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>setSelectedDate(date),inline:true,minDate:new Date()// Prevent selecting past dates\n})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Time Slot:\",/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-container\",children:generateTimeSlots().map((slot,index)=>/*#__PURE__*/_jsx(\"button\",{className:`time-slot ${timeSlot===slot?'selected':''}`,onClick:()=>setTimeSlot(slot),children:slot},index))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"schedule-btn\",onClick:handleSchedulePickup,children:\"Schedule Pickup\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pickup Confirmation\"}),bookDetails&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Book Title: \",bookDetails.title]}),/*#__PURE__*/_jsx(\"img\",{src:bookDetails.image,alt:bookDetails.title,className:\"book-image\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Location: \",pickupLocation]}),\" \",/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Date: \",selectedDate.toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Time: \",timeSlot]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>alert('Pickup Scheduled!'),children:\"Confirm Pickup\"})]})});};export default BookPickup;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","axios","useLocation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BookPickup","pickupLocation","setPickupLocation","selectedDate","setSelectedDate","timeSlot","setTimeSlot","confirmation","setConfirmation","bookDetails","setBookDetails","location","params","URLSearchParams","search","isbn","get","email","fetchBookDetails","response","data","error","console","locations","generateTimeSlots","timeSlots","startTime","Date","setHours","getHours","endTime","setMinutes","getMinutes","formattedTime","toLocaleTimeString","hour","minute","push","handleSchedulePickup","post","pickupDate","pickupTime","alert","className","children","title","src","image","alt","value","onChange","e","target","map","loc","index","selected","date","inline","minDate","slot","onClick","toLocaleDateString"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/BookPickup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './BookPickup.css';  // Assuming you'll style it with a custom CSS file for a better UI\n\nconst BookPickup = () => {\n  const [pickupLocation, setPickupLocation] = useState('');  // Renamed to 'pickupLocation'\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [timeSlot, setTimeSlot] = useState('');\n  const [confirmation, setConfirmation] = useState(false);\n  const [bookDetails, setBookDetails] = useState(null); // Stores the book details from the query params\n\n  const location = useLocation();  // Using 'location' from 'react-router-dom'\n  const params = new URLSearchParams(location.search);\n  const isbn = params.get('isbn');\n  const email = params.get('email');  // Assume user is logged in, and email is passed in the query\n\n  // Fetch book details based on the ISBN (this can be from your backend API)\n  useEffect(() => {\n    const fetchBookDetails = async () => {\n      try {\n        const response = await axios.get(`/api/books/${isbn}`);  // Fetch the book details\n        setBookDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching book details:', error);\n      }\n    };\n\n    if (isbn) {\n      fetchBookDetails();\n    }\n  }, [isbn]);\n\n  const locations = ['Library 1', 'Library 2', 'Center A', 'Center B', 'Bookstore C', 'Bookstore D'];\n\n  // Generate time slots in 30-minute intervals from 9 AM to 5 PM\n  const generateTimeSlots = () => {\n    const timeSlots = [];\n    let startTime = new Date();\n    startTime.setHours(9, 0, 0, 0); // Start from 9 AM\n\n    while (startTime.getHours() < 17) { // Till 5 PM\n      const endTime = new Date(startTime);\n      endTime.setMinutes(startTime.getMinutes() + 30); // Increment by 30 mins\n      const formattedTime = `${startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} - ${endTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\n      timeSlots.push(formattedTime);\n      startTime = endTime;\n    }\n\n    return timeSlots;\n  };\n\n  const handleSchedulePickup = async () => {\n    if (pickupLocation && selectedDate && timeSlot) {\n      try {\n        await axios.post('/api/pickup/schedule', {\n          isbn,\n          email,\n          pickupDate: selectedDate,\n          pickupTime: timeSlot,\n          pickupLocation: pickupLocation  // Ensure the variable is 'pickupLocation'\n        });\n        setConfirmation(true);\n      } catch (error) {\n        console.error('Error scheduling pickup:', error);\n      }\n    } else {\n      alert('Please select all options before proceeding.');\n    }\n  };  \n\n  return (\n    <div className=\"book-pickup-container\">\n      {!confirmation ? (\n        <div>\n          <h2>Schedule Book Pickup</h2>\n\n          {bookDetails ? (\n            <>\n              <p>Book Title: {bookDetails.title}</p>\n              <img src={bookDetails.image} alt={bookDetails.title} className=\"book-image\" />\n            </>\n          ) : (\n            <p>Loading book details...</p>\n          )}\n\n          <label>\n            Select Pickup Location:\n            <select value={pickupLocation} onChange={(e) => setPickupLocation(e.target.value)}>\n              <option value=\"\">Select Location</option>\n              {locations.map((loc, index) => (\n                <option key={index} value={loc}>\n                  {loc}\n                </option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <br />\n          <label>\n            Select Date:\n            <DatePicker\n              selected={selectedDate}\n              onChange={(date) => setSelectedDate(date)}\n              inline\n              minDate={new Date()} // Prevent selecting past dates\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            Select Time Slot:\n            <div className=\"time-slot-container\">\n              {generateTimeSlots().map((slot, index) => (\n                <button\n                  key={index}\n                  className={`time-slot ${timeSlot === slot ? 'selected' : ''}`}\n                  onClick={() => setTimeSlot(slot)}\n                >\n                  {slot}\n                </button>\n              ))}\n            </div>\n          </label>\n\n          <button className=\"schedule-btn\" onClick={handleSchedulePickup}>Schedule Pickup</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Pickup Confirmation</h2>\n          {bookDetails && (\n            <>\n              <p>Book Title: {bookDetails.title}</p>\n              <img src={bookDetails.image} alt={bookDetails.title} className=\"book-image\" />\n            </>\n          )}\n          <p>Pickup Location: {pickupLocation}</p> {/* Changed 'location' to 'pickupLocation' */}\n          <p>Pickup Date: {selectedDate.toLocaleDateString()}</p>\n          <p>Pickup Time: {timeSlot}</p>\n          <button onClick={() => alert('Pickup Scheduled!')}>Confirm Pickup</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookPickup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}