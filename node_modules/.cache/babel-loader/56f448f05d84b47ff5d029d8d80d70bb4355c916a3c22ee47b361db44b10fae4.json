{"ast":null,"code":"import React,{useEffect,useState}from'react';import BookCard from'./BookCard';import Sorting from'./Sorting';import Search from'./Search';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BrowseBooks=()=>{// `books` holds all the fetched books, `filteredBooks` holds the displayed (searched/sorted) books.\nconst[books,setBooks]=useState([]);const[filteredBooks,setFilteredBooks]=useState([]);const[user]=useState(null);// Placeholder for user authentication; currently set to `null`.\nconst userId=user===null||user===void 0?void 0:user.id;// Optional chaining to get the userId if user exists.\n// useEffect hook to fetch the books when the component mounts.\nuseEffect(()=>{// Asynchronous function to fetch book data from the API.\nconst fetchBooks=async()=>{try{const response=await fetch('/api/books');// Fetch the books from the server.\n// Check if the response is not OK (status other than 200-299).\nif(!response.ok){throw new Error('Network response was not ok');}// Parse the response data as JSON.\nconst data=await response.json();// Format the book data (assumes each book has _id, title, author, isbn, and image fields).\nconst formattedBooks=data.map(book=>({id:book._id,title:book.title||'',// Ensure title is present, fallback to empty string if undefined.\nauthor:book.author||'',// Ensure author is present, fallback to empty string if undefined.\nisbn:book.isbn||'',// Ensure ISBN is present, fallback to empty string if undefined.\nimage:book.image||''// Ensure image is present, fallback to empty string if undefined.\n}));// Set the `books` and `filteredBooks` states to the fetched and formatted books.\nsetBooks(formattedBooks);setFilteredBooks(formattedBooks);// Initially, display all books.\n}catch(error){console.error(\"Error fetching books:\",error);// Log any errors during the fetching process.\n}};fetchBooks();// Invoke the fetchBooks function.\n},[]);// Empty dependency array ensures this effect only runs once on component mount.\n// Function to handle sorting of the books.\nconst sortBooks=order=>{// Create a copy of the filteredBooks to avoid mutating the state directly.\nlet sortedArray=[...filteredBooks];// Sort based on the order selected (ascending or descending by title).\nif(order==='asc'){sortedArray.sort((a,b)=>a.title.localeCompare(b.title));// Sort A to Z.\n}else if(order==='desc'){sortedArray.sort((a,b)=>b.title.localeCompare(a.title));// Sort Z to A.\n}// Update the filteredBooks state with the sorted array.\nsetFilteredBooks(sortedArray);};// Function to filter books based on the search term (title, author, or ISBN).\nconst filterBooks=searchTerm=>{if(!searchTerm.trim()){// If search term is empty, reset the filteredBooks to show all books.\nsetFilteredBooks(books);}else{// Prepare the search term by trimming whitespace and removing dashes from ISBN.\nconst search=searchTerm.trim().toLowerCase().replace(/-/g,'');// Filter books by title, author, or ISBN (removing dashes from ISBN).\nconst filteredArray=books.filter(book=>book.title&&book.title.toLowerCase().includes(search)||// Match title.\nbook.author&&book.author.toLowerCase().includes(search)||// Match author.\nbook.isbn&&book.isbn.replace(/-/g,'').toLowerCase().includes(search)// Match ISBN, ignoring dashes.\n);// Update the filteredBooks state with the filtered results.\nsetFilteredBooks(filteredArray);}};// Inline styles for different parts of the component UI.\nconst searchContainerStyle={display:'flex',justifyContent:'center',alignItems:'center',backgroundColor:'#000',padding:'20px'};const sortingContainerStyle={display:'flex',justifyContent:'flex-end',paddingRight:'20px',backgroundColor:'#000',paddingBottom:'10px'};const pageStyle={display:'flex',flexWrap:'wrap',justifyContent:'space-around',alignItems:'flex-start',backgroundColor:'#000',padding:'20px',color:'white'};const noBooksStyle={textAlign:'center',color:'white',fontSize:'1.5rem'};// Return JSX for the BrowseBooks component.\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:searchContainerStyle,children:/*#__PURE__*/_jsx(Search,{filterBooks:filterBooks})}),/*#__PURE__*/_jsx(\"div\",{style:sortingContainerStyle,children:/*#__PURE__*/_jsx(Sorting,{sortBooks:sortBooks})}),/*#__PURE__*/_jsx(\"div\",{style:pageStyle,children:filteredBooks.length>0?// Map over filteredBooks and render a BookCard for each.\nfilteredBooks.map(book=>/*#__PURE__*/_jsx(BookCard,{book:book,userId:userId},book.id)):/*#__PURE__*/// Show this message if no books match the search/filter criteria.\n_jsx(\"div\",{style:noBooksStyle,children:\"No books found\"})})]});};export default BrowseBooks;","map":{"version":3,"names":["React","useEffect","useState","BookCard","Sorting","Search","jsx","_jsx","jsxs","_jsxs","BrowseBooks","books","setBooks","filteredBooks","setFilteredBooks","user","userId","id","fetchBooks","response","fetch","ok","Error","data","json","formattedBooks","map","book","_id","title","author","isbn","image","error","console","sortBooks","order","sortedArray","sort","a","b","localeCompare","filterBooks","searchTerm","trim","search","toLowerCase","replace","filteredArray","filter","includes","searchContainerStyle","display","justifyContent","alignItems","backgroundColor","padding","sortingContainerStyle","paddingRight","paddingBottom","pageStyle","flexWrap","color","noBooksStyle","textAlign","fontSize","children","style","length"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/BrowseBooks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport BookCard from './BookCard';\r\nimport Sorting from './Sorting';\r\nimport Search from './Search';\r\n\r\nconst BrowseBooks = () => {\r\n  // `books` holds all the fetched books, `filteredBooks` holds the displayed (searched/sorted) books.\r\n  const [books, setBooks] = useState([]);\r\n  const [filteredBooks, setFilteredBooks] = useState([]);\r\n  const [user] = useState(null); // Placeholder for user authentication; currently set to `null`.\r\n  const userId = user?.id; // Optional chaining to get the userId if user exists.\r\n\r\n  // useEffect hook to fetch the books when the component mounts.\r\n  useEffect(() => {\r\n    // Asynchronous function to fetch book data from the API.\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await fetch('/api/books'); // Fetch the books from the server.\r\n        \r\n        // Check if the response is not OK (status other than 200-299).\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        // Parse the response data as JSON.\r\n        const data = await response.json();\r\n\r\n        // Format the book data (assumes each book has _id, title, author, isbn, and image fields).\r\n        const formattedBooks = data.map(book => ({\r\n          id: book._id,\r\n          title: book.title || '',  // Ensure title is present, fallback to empty string if undefined.\r\n          author: book.author || '', // Ensure author is present, fallback to empty string if undefined.\r\n          isbn: book.isbn || '',  // Ensure ISBN is present, fallback to empty string if undefined.\r\n          image: book.image || ''  // Ensure image is present, fallback to empty string if undefined.\r\n        }));\r\n\r\n        // Set the `books` and `filteredBooks` states to the fetched and formatted books.\r\n        setBooks(formattedBooks);\r\n        setFilteredBooks(formattedBooks); // Initially, display all books.\r\n      } catch (error) {\r\n        console.error(\"Error fetching books:\", error); // Log any errors during the fetching process.\r\n      }\r\n    };\r\n\r\n    fetchBooks(); // Invoke the fetchBooks function.\r\n  }, []); // Empty dependency array ensures this effect only runs once on component mount.\r\n\r\n  // Function to handle sorting of the books.\r\n  const sortBooks = (order) => {\r\n    // Create a copy of the filteredBooks to avoid mutating the state directly.\r\n    let sortedArray = [...filteredBooks]; \r\n\r\n    // Sort based on the order selected (ascending or descending by title).\r\n    if (order === 'asc') {\r\n      sortedArray.sort((a, b) => a.title.localeCompare(b.title)); // Sort A to Z.\r\n    } else if (order === 'desc') {\r\n      sortedArray.sort((a, b) => b.title.localeCompare(a.title)); // Sort Z to A.\r\n    }\r\n\r\n    // Update the filteredBooks state with the sorted array.\r\n    setFilteredBooks(sortedArray);\r\n  };\r\n\r\n  // Function to filter books based on the search term (title, author, or ISBN).\r\n  const filterBooks = (searchTerm) => {\r\n    if (!searchTerm.trim()) {\r\n      // If search term is empty, reset the filteredBooks to show all books.\r\n      setFilteredBooks(books);\r\n    } else {\r\n      // Prepare the search term by trimming whitespace and removing dashes from ISBN.\r\n      const search = searchTerm.trim().toLowerCase().replace(/-/g, '');\r\n\r\n      // Filter books by title, author, or ISBN (removing dashes from ISBN).\r\n      const filteredArray = books.filter(book =>\r\n        (book.title && book.title.toLowerCase().includes(search)) || // Match title.\r\n        (book.author && book.author.toLowerCase().includes(search)) || // Match author.\r\n        (book.isbn && book.isbn.replace(/-/g, '').toLowerCase().includes(search)) // Match ISBN, ignoring dashes.\r\n      );\r\n\r\n      // Update the filteredBooks state with the filtered results.\r\n      setFilteredBooks(filteredArray);\r\n    }\r\n  };\r\n\r\n  // Inline styles for different parts of the component UI.\r\n  const searchContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#000',\r\n    padding: '20px',\r\n  };\r\n\r\n  const sortingContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    paddingRight: '20px',\r\n    backgroundColor: '#000',\r\n    paddingBottom: '10px',\r\n  };\r\n\r\n  const pageStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'flex-start',\r\n    backgroundColor: '#000',\r\n    padding: '20px',\r\n    color: 'white',\r\n  };\r\n\r\n  const noBooksStyle = {\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    fontSize: '1.5rem',\r\n  };\r\n\r\n  // Return JSX for the BrowseBooks component.\r\n  return (\r\n    <div>\r\n      {/* Search component */}\r\n      <div style={searchContainerStyle}>\r\n        <Search filterBooks={filterBooks} />\r\n      </div>\r\n\r\n      {/* Sorting component */}\r\n      <div style={sortingContainerStyle}>\r\n        <Sorting sortBooks={sortBooks} />\r\n      </div>\r\n\r\n      {/* Display books or a 'No books found' message */}\r\n      <div style={pageStyle}>\r\n        {filteredBooks.length > 0 ? (\r\n          // Map over filteredBooks and render a BookCard for each.\r\n          filteredBooks.map((book) => (\r\n            <BookCard key={book.id} book={book} userId={userId} />\r\n          ))\r\n        ) : (\r\n          // Show this message if no books match the search/filter criteria.\r\n          <div style={noBooksStyle}>No books found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrowseBooks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}