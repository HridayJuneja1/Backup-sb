{"ast":null,"code":"import React,{useState,useEffect}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import axios from'axios';import'./BookPickup.css';// Assuming you'll style it with a custom CSS file for a better UI\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BookPickup=()=>{const[pickupLocation,setPickupLocation]=useState('');const[selectedDate,setSelectedDate]=useState(null);const[timeSlot,setTimeSlot]=useState('');const[confirmation,setConfirmation]=useState(false);const[bookDetails,setBookDetails]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{const fetchBookDetails=async()=>{setIsLoading(true);// Start loading\ntry{const user=JSON.parse(localStorage.getItem('user'));if(user&&user.email){// Get the bookId from the URL query parameters\nconst bookId=new URLSearchParams(window.location.search).get('bookId');const response=await axios.get(`/api/book/${encodeURIComponent(bookId)}`);setBookDetails(response.data);// Set book details\n}setIsLoading(false);// Stop loading\n}catch(error){console.error(\"Error fetching book details:\",error);setIsLoading(false);// Stop loading on error\n}};fetchBookDetails();},[]);const locations=['Library 1','Library 2','Center A','Center B','Bookstore C','Bookstore D'];const generateTimeSlots=()=>{const timeSlots=[];let startTime=new Date();startTime.setHours(9,0,0,0);// Start from 9 AM\nwhile(startTime.getHours()<17){// Till 5 PM\nconst endTime=new Date(startTime);endTime.setMinutes(startTime.getMinutes()+30);// Increment by 30 mins\nconst formattedTime=`${startTime.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})} - ${endTime.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})}`;timeSlots.push(formattedTime);startTime=endTime;}return timeSlots;};const handleSchedulePickup=async()=>{if(pickupLocation&&selectedDate&&timeSlot){try{const user=JSON.parse(localStorage.getItem('user'));const bookId=new URLSearchParams(window.location.search).get('bookId');// Get bookId from query params\nawait axios.post('/api/pickup/schedule',{bookId,// Use bookId instead of ISBN\nemail:user.email,pickupDate:selectedDate,pickupTime:timeSlot,pickupLocation:pickupLocation});setConfirmation(true);}catch(error){console.error('Error scheduling pickup:',error);}}else{alert('Please select all options before proceeding.');}};if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading book details...\"});return/*#__PURE__*/_jsx(\"div\",{className:\"book-pickup-container\",children:!confirmation?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Schedule Book Pickup\"}),bookDetails?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Book Title: \",bookDetails.title]}),/*#__PURE__*/_jsx(\"img\",{src:bookDetails.image,alt:bookDetails.title,className:\"book-image\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Failed to load book details.\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Pickup Location:\",/*#__PURE__*/_jsxs(\"select\",{value:pickupLocation,onChange:e=>setPickupLocation(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Location\"}),locations.map((loc,index)=>/*#__PURE__*/_jsx(\"option\",{value:loc,children:loc},index))]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Date:\",/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>setSelectedDate(date),inline:true,minDate:new Date()// Prevent selecting past dates\n})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Time Slot:\",/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-container\",children:generateTimeSlots().map((slot,index)=>/*#__PURE__*/_jsx(\"button\",{className:`time-slot ${timeSlot===slot?'selected':''}`,onClick:()=>setTimeSlot(slot),children:slot},index))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"schedule-btn\",onClick:handleSchedulePickup,children:\"Schedule Pickup\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pickup Confirmation\"}),bookDetails&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Book Title: \",bookDetails.title]}),/*#__PURE__*/_jsx(\"img\",{src:bookDetails.image,alt:bookDetails.title,className:\"book-image\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Location: \",pickupLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Date: \",selectedDate.toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Time: \",timeSlot]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>alert('Pickup Scheduled!'),children:\"Confirm Pickup\"})]})});};export default BookPickup;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BookPickup","pickupLocation","setPickupLocation","selectedDate","setSelectedDate","timeSlot","setTimeSlot","confirmation","setConfirmation","bookDetails","setBookDetails","isLoading","setIsLoading","fetchBookDetails","user","JSON","parse","localStorage","getItem","email","bookId","URLSearchParams","window","location","search","get","response","encodeURIComponent","data","error","console","locations","generateTimeSlots","timeSlots","startTime","Date","setHours","getHours","endTime","setMinutes","getMinutes","formattedTime","toLocaleTimeString","hour","minute","push","handleSchedulePickup","post","pickupDate","pickupTime","alert","children","className","title","src","image","alt","value","onChange","e","target","map","loc","index","selected","date","inline","minDate","slot","onClick","toLocaleDateString"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/BookPickup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport './BookPickup.css';  // Assuming you'll style it with a custom CSS file for a better UI\n\nconst BookPickup = () => {\n  const [pickupLocation, setPickupLocation] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [timeSlot, setTimeSlot] = useState('');\n  const [confirmation, setConfirmation] = useState(false);\n  const [bookDetails, setBookDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookDetails = async () => {\n      setIsLoading(true);  // Start loading\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.email) {\n          // Get the bookId from the URL query parameters\n          const bookId = new URLSearchParams(window.location.search).get('bookId');\n          const response = await axios.get(`/api/book/${encodeURIComponent(bookId)}`);\n          setBookDetails(response.data);  // Set book details\n        }\n        setIsLoading(false);  // Stop loading\n      } catch (error) {\n        console.error(\"Error fetching book details:\", error);\n        setIsLoading(false);  // Stop loading on error\n      }\n    };\n\n    fetchBookDetails();\n  }, []);\n\n  const locations = ['Library 1', 'Library 2', 'Center A', 'Center B', 'Bookstore C', 'Bookstore D'];\n\n  const generateTimeSlots = () => {\n    const timeSlots = [];\n    let startTime = new Date();\n    startTime.setHours(9, 0, 0, 0); // Start from 9 AM\n\n    while (startTime.getHours() < 17) { // Till 5 PM\n      const endTime = new Date(startTime);\n      endTime.setMinutes(startTime.getMinutes() + 30); // Increment by 30 mins\n      const formattedTime = `${startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} - ${endTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\n      timeSlots.push(formattedTime);\n      startTime = endTime;\n    }\n\n    return timeSlots;\n  };\n\n  const handleSchedulePickup = async () => {\n    if (pickupLocation && selectedDate && timeSlot) {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        const bookId = new URLSearchParams(window.location.search).get('bookId');  // Get bookId from query params\n        await axios.post('/api/pickup/schedule', {\n          bookId,  // Use bookId instead of ISBN\n          email: user.email,\n          pickupDate: selectedDate,\n          pickupTime: timeSlot,\n          pickupLocation: pickupLocation\n        });\n        setConfirmation(true);\n      } catch (error) {\n        console.error('Error scheduling pickup:', error);\n      }\n    } else {\n      alert('Please select all options before proceeding.');\n    }\n  };\n\n  if (isLoading) return <p>Loading book details...</p>;\n\n  return (\n    <div className=\"book-pickup-container\">\n      {!confirmation ? (\n        <div>\n          <h2>Schedule Book Pickup</h2>\n\n          {bookDetails ? (\n            <>\n              <p>Book Title: {bookDetails.title}</p>\n              <img src={bookDetails.image} alt={bookDetails.title} className=\"book-image\" />\n            </>\n          ) : (\n            <p>Failed to load book details.</p>\n          )}\n\n          <label>\n            Select Pickup Location:\n            <select value={pickupLocation} onChange={(e) => setPickupLocation(e.target.value)}>\n              <option value=\"\">Select Location</option>\n              {locations.map((loc, index) => (\n                <option key={index} value={loc}>\n                  {loc}\n                </option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <br />\n          <label>\n            Select Date:\n            <DatePicker\n              selected={selectedDate}\n              onChange={(date) => setSelectedDate(date)}\n              inline\n              minDate={new Date()} // Prevent selecting past dates\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            Select Time Slot:\n            <div className=\"time-slot-container\">\n              {generateTimeSlots().map((slot, index) => (\n                <button\n                  key={index}\n                  className={`time-slot ${timeSlot === slot ? 'selected' : ''}`}\n                  onClick={() => setTimeSlot(slot)}\n                >\n                  {slot}\n                </button>\n              ))}\n            </div>\n          </label>\n\n          <button className=\"schedule-btn\" onClick={handleSchedulePickup}>Schedule Pickup</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Pickup Confirmation</h2>\n          {bookDetails && (\n            <>\n              <p>Book Title: {bookDetails.title}</p>\n              <img src={bookDetails.image} alt={bookDetails.title} className=\"book-image\" />\n            </>\n          )}\n          <p>Pickup Location: {pickupLocation}</p>\n          <p>Pickup Date: {selectedDate.toLocaleDateString()}</p>\n          <p>Pickup Time: {timeSlot}</p>\n          <button onClick={() => alert('Pickup Scheduled!')}>Confirm Pickup</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookPickup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}