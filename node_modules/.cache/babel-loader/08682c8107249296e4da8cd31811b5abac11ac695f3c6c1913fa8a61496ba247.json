{"ast":null,"code":"import React,{useState,useEffect}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import axios from'axios';import'./BookPickup.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BookPickup=()=>{const[pickupLocation,setPickupLocation]=useState('');const[selectedDate,setSelectedDate]=useState(null);const[availableSlots,setAvailableSlots]=useState([]);const[timeSlot,setTimeSlot]=useState('');const[isReschedule,setIsReschedule]=useState(false);// Track if it's a reschedule\nconst[pickupScheduled,setPickupScheduled]=useState(false);// Track if a pickup is already scheduled\n// Fetch the user's scheduled pickup when the page loads\nuseEffect(()=>{const fetchScheduledPickup=async()=>{const urlParams=new URLSearchParams(window.location.search);const cartId=urlParams.get('cartId');// Get cartId from the URL\ntry{const response=await axios.get('/api/pickup/scheduled',{params:{cartId}});if(response.data.scheduledPickup){const pickup=response.data.scheduledPickup;setPickupLocation(pickup.pickupLocation);setSelectedDate(new Date(pickup.pickupDate));setTimeSlot(pickup.pickupTime);setIsReschedule(true);// Set reschedule flag\nsetPickupScheduled(true);// Mark that a pickup is already scheduled\n}}catch(error){console.error('Error fetching scheduled pickup:',error);}};fetchScheduledPickup();},[]);// Fetch available slots when date and location are selected\nuseEffect(()=>{if(selectedDate&&pickupLocation){const fetchAvailableSlots=async()=>{try{const response=await axios.get('/api/pickup/available-slots',{params:{pickupDate:selectedDate.toISOString().split('T')[0],pickupLocation}});setAvailableSlots(response.data.availableSlots);}catch(error){console.error('Error fetching available slots:',error);}};fetchAvailableSlots();}},[selectedDate,pickupLocation]);// Handle the scheduling of the pickup\nconst handleSchedulePickup=async()=>{if(pickupLocation&&selectedDate&&timeSlot){try{const urlParams=new URLSearchParams(window.location.search);const cartId=urlParams.get('cartId');const user=JSON.parse(localStorage.getItem('user'));// Get user info from localStorage\nawait axios.post('/api/pickup/schedule',{cartId,email:user.email,pickupDate:selectedDate,pickupTime:timeSlot,pickupLocation});setPickupScheduled(true);// Mark pickup as scheduled\nsetIsReschedule(true);// Allow rescheduling after pickup is scheduled\n}catch(error){console.error('Error scheduling pickup:',error);}}else{alert('Please select all options before proceeding.');}};// Conditionally render the reschedule view or scheduling view\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"book-pickup-container\",children:pickupScheduled?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reschedule Book Pickup\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Location: \",pickupLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Date: \",selectedDate===null||selectedDate===void 0?void 0:selectedDate.toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pickup Time: \",timeSlot]}),/*#__PURE__*/_jsx(\"button\",{className:\"reschedule-btn\",onClick:()=>setPickupScheduled(false),children:\"Reschedule Pickup\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Schedule Book Pickup\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Pickup Location:\",/*#__PURE__*/_jsxs(\"select\",{value:pickupLocation,onChange:e=>setPickupLocation(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Location\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Library 1\",children:\"Library 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Library 2\",children:\"Library 2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Center A\",children:\"Center A\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Center B\",children:\"Center B\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Date:\",/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>setSelectedDate(date),minDate:new Date()})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),availableSlots.length>0&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Time Slot:\",/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-container\",children:availableSlots.map((slot,index)=>/*#__PURE__*/_jsx(\"button\",{className:`time-slot ${timeSlot===slot?'selected':''}`,onClick:()=>setTimeSlot(slot),children:slot},index))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"schedule-btn\",onClick:handleSchedulePickup,children:\"Schedule Pickup\"})]})});};export default BookPickup;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","axios","jsx","_jsx","jsxs","_jsxs","BookPickup","pickupLocation","setPickupLocation","selectedDate","setSelectedDate","availableSlots","setAvailableSlots","timeSlot","setTimeSlot","isReschedule","setIsReschedule","pickupScheduled","setPickupScheduled","fetchScheduledPickup","urlParams","URLSearchParams","window","location","search","cartId","get","response","params","data","scheduledPickup","pickup","Date","pickupDate","pickupTime","error","console","fetchAvailableSlots","toISOString","split","handleSchedulePickup","user","JSON","parse","localStorage","getItem","post","email","alert","className","children","toLocaleDateString","onClick","value","onChange","e","target","selected","date","minDate","length","map","slot","index"],"sources":["/Users/hrida/SYST35300/samskritabharati/src/components/BookPickup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport './BookPickup.css';\n\nconst BookPickup = () => {\n  const [pickupLocation, setPickupLocation] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [timeSlot, setTimeSlot] = useState('');\n  const [isReschedule, setIsReschedule] = useState(false); // Track if it's a reschedule\n  const [pickupScheduled, setPickupScheduled] = useState(false); // Track if a pickup is already scheduled\n\n  // Fetch the user's scheduled pickup when the page loads\n  useEffect(() => {\n    const fetchScheduledPickup = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const cartId = urlParams.get('cartId');  // Get cartId from the URL\n\n      try {\n        const response = await axios.get('/api/pickup/scheduled', { params: { cartId } });\n\n        if (response.data.scheduledPickup) {\n          const pickup = response.data.scheduledPickup;\n          setPickupLocation(pickup.pickupLocation);\n          setSelectedDate(new Date(pickup.pickupDate));\n          setTimeSlot(pickup.pickupTime);\n          setIsReschedule(true);  // Set reschedule flag\n          setPickupScheduled(true);  // Mark that a pickup is already scheduled\n        }\n      } catch (error) {\n        console.error('Error fetching scheduled pickup:', error);\n      }\n    };\n\n    fetchScheduledPickup();\n  }, []);\n\n  // Fetch available slots when date and location are selected\n  useEffect(() => {\n    if (selectedDate && pickupLocation) {\n      const fetchAvailableSlots = async () => {\n        try {\n          const response = await axios.get('/api/pickup/available-slots', {\n            params: { pickupDate: selectedDate.toISOString().split('T')[0], pickupLocation }\n          });\n          setAvailableSlots(response.data.availableSlots);\n        } catch (error) {\n          console.error('Error fetching available slots:', error);\n        }\n      };\n\n      fetchAvailableSlots();\n    }\n  }, [selectedDate, pickupLocation]);\n\n  // Handle the scheduling of the pickup\n  const handleSchedulePickup = async () => {\n    if (pickupLocation && selectedDate && timeSlot) {\n      try {\n        const urlParams = new URLSearchParams(window.location.search);\n        const cartId = urlParams.get('cartId');\n        const user = JSON.parse(localStorage.getItem('user')); // Get user info from localStorage\n\n        await axios.post('/api/pickup/schedule', {\n          cartId,\n          email: user.email,\n          pickupDate: selectedDate,\n          pickupTime: timeSlot,\n          pickupLocation\n        });\n\n        setPickupScheduled(true); // Mark pickup as scheduled\n        setIsReschedule(true); // Allow rescheduling after pickup is scheduled\n      } catch (error) {\n        console.error('Error scheduling pickup:', error);\n      }\n    } else {\n      alert('Please select all options before proceeding.');\n    }\n  };\n\n  // Conditionally render the reschedule view or scheduling view\n  return (\n    <div className=\"book-pickup-container\">\n      {pickupScheduled ? (\n        <div>\n          <h2>Reschedule Book Pickup</h2>\n          <p>Pickup Location: {pickupLocation}</p>\n          <p>Pickup Date: {selectedDate?.toLocaleDateString()}</p>\n          <p>Pickup Time: {timeSlot}</p>\n          <button className=\"reschedule-btn\" onClick={() => setPickupScheduled(false)}>\n            Reschedule Pickup\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h2>Schedule Book Pickup</h2>\n\n          <label>\n            Select Pickup Location:\n            <select value={pickupLocation} onChange={(e) => setPickupLocation(e.target.value)}>\n              <option value=\"\">Select Location</option>\n              <option value=\"Library 1\">Library 1</option>\n              <option value=\"Library 2\">Library 2</option>\n              <option value=\"Center A\">Center A</option>\n              <option value=\"Center B\">Center B</option>\n            </select>\n          </label>\n          <br />\n          <br />\n          <label>\n            Select Date:\n            <DatePicker\n              selected={selectedDate}\n              onChange={(date) => setSelectedDate(date)}\n              minDate={new Date()}\n            />\n          </label>\n          <br />\n          <br />\n          {availableSlots.length > 0 && (\n            <label>\n              Select Time Slot:\n              <div className=\"time-slot-container\">\n                {availableSlots.map((slot, index) => (\n                  <button\n                    key={index}\n                    className={`time-slot ${timeSlot === slot ? 'selected' : ''}`}\n                    onClick={() => setTimeSlot(slot)}\n                  >\n                    {slot}\n                  </button>\n                ))}\n              </div>\n            </label>\n          )}\n\n          <button className=\"schedule-btn\" onClick={handleSchedulePickup}>\n            Schedule Pickup\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookPickup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}